version: '3.8'

services:
  # PostgreSQL para armazenamento principal
  postgres:
    image: postgres:14
    container_name: netprovider-postgres
    restart: always
    environment:
      POSTGRES_USER: netprovider
      POSTGRES_PASSWORD: netprovider123
      POSTGRES_DB: netprovider
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - netprovider-network

  # Redis para cache
  redis:
    image: redis:6.2-alpine
    container_name: netprovider-redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - netprovider-network

  # Zookeeper para Kafka
  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    container_name: netprovider-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - netprovider-network

  # Kafka para mensageria
  kafka:
    image: confluentinc/cp-kafka:7.0.1
    container_name: netprovider-kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - netprovider-network

  # Adminer para gerenciar o banco de dados (opcional para desenvolvimento)
  adminer:
    image: adminer
    container_name: netprovider-adminer
    restart: always
    ports:
      - "8080:8080"
    networks:
      - netprovider-network

networks:
  netprovider-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data: 